<!DOCTYPE html>
<html lang="ru">
  <head>
    <meta content="text/html; charset=utf-8" http-equiv="content-type">
    <meta name="author" content="Перевод на русский: Sergii Leonov">
    <title>История версий Inno Setup 6</title>
    <base href="https://jrsoftware.org/">
    <style type="text/css">
    body         { font: calc(14rem/16)/1.5 "Segoe UI", sans-serif; color: #282828; background-color: white }
    a:link       { color: #264b99; background-color: transparent }
    a:visited    { color: #5e85d7; background-color: transparent }
    a:active     { color: #7799dd; background-color: transparent }
    tt, pre      { font: calc(13rem/16)/calc(21rem/16) monospace; color: inherit; background-color: #f0f0f0; padding: 2px 4px; border-radius: 4px }
    pre          { line-height: normal; padding: 10px; border-radius: 6px }
    li, div.limargins { margin-top: 5px; margin-bottom: 5px }
    div.bluehead { text-align: center; color: white; background-color: #264b99; padding: 5px; font-weight: bold; line-height: normal }
    .date        { font-size: calc(11rem/16); font-weight: bold }
    .head1       { font-size: calc(32rem/16) }
    .head2       { font-size: calc(20rem/16) }
    .ver         { font-size: calc(20rem/16); font-weight: bold }
</style>
</head>
  <body>
    <div class="bluehead"><span class="head1">Inno Setup 6</span><br>
      <span class="head2">История версий</span></div>
    <p>Авторские права © 1997-2024 <a href="./">Jordan Russell</a>. Все права
      защищены.<br>
      Смежные авторские права © 2000-2024 Martijn Laan. Все права защищены.<br>
      Условия распространения и использования смотрите в <a href="files/is/license.txt">LICENSE.TXT</a>.
    </p>
    <p><b>Хотите получать уведомления об обновлениях?</b> <a href="ismail.php">Подпишитесь</a>
      на рассылку о новых выпусках Inno Setup.</p>
    <p><a name="6.3.0"></a><span class="ver">6.3.0-dev </span><span class="date">(?)</span></p>
    <p><span class="head2">Улучшена поддержка файлов в кодировке UTF-8</span></p>
    <ul>
      <li>Добавлена поддержка кодировки UTF-8 без маркера BOM для файлов
        сценариев .iss, файлов сообщений .isl, файлов <tt>LicenseFile</tt>, <tt>InfoBeforeFile</tt>,
        <tt>InfoAfterFile</tt> и файлов, подключаемых директивой <tt>#file</tt>
        ISPP.</li>
      <li>Изменения в IDE компилятора:
        <ul>
          <li>Новые файлы сценариев теперь по умолчанию сохраняются в кодировке
            UTF-8 без BOM, что позволило привести IDE в соответствие с
            большинством других текстовых редакторов. Существующие файлы
            сохраняются в прежнем виде до тех пор, пока кодировка сохранения не
            будет изменена вручную с помощью команды "<i>Save Encoding</i>"
            (Сохранить в кодировке) в меню "<i>File</i>" (Файл).</li>
          <li>В подменю "<i>Save Encoding</i>" (Сохранить в кодировке) добавлен
            новый пункт "<i>UTF-8 with BOM</i>" для записи новых файлов с
            маркером BOM.</li>
        </ul>
      </li>
      <li>Изменения в Pascal Scripting:
        <ul>
          <li>Функция <tt>LoadStringsFromFile</tt> теперь также поддерживает
            файлы в кодировке UTF-8 без BOM.</li>
          <li>Добавлена новая функция <tt>SaveStringsToUTF8FileWithoutBOM</tt>.</li>
        </ul>
      </li>
      <li>Изменения ISPP: вывод препроцессора, сохраняемый с помощью <tt>SaveToFile</tt>,
        теперь всегда выполняется в кодировке UTF-8 без маркера BOM.</li>
    </ul>
    <p><span class="head2">Улучшена поддержка систем Arm64 и внесены
        сопутствующие изменения</span></p>
    <ul>
      <li>Теперь программа установки официально поддерживает установку 64-бит
        приложений на системы Windows 11 с архитектурой Arm64, которые могут
        запускать 64-бит исполняемые файлы посредством эмуляции. Чтобы
        обеспечить корректную работу программ установок 64-бит приложений на
        системах Windows 11 с архитектурой Arm64, в существующие сценарии
        потребуется внести незначительные изменения. Самое главное:
        <ol>
          <li>В директивах <tt>ArchitecturesAllowed</tt> и <tt>ArchitecturesInstallIn64BitMode</tt>
            значение <tt>x64</tt> следует заменить на <tt>x64compatible</tt>.</li>
          <li>В параметре <tt>Check</tt> и в секции <tt>[Code]</tt> любое
            обращение к функции <tt>IsX64</tt> следует заменить на функцию <tt>IsX64Compatible</tt>.</li>
          <li>В секции <tt>[Code]</tt>, если используются сравнения вида <tt>ProcessorArchitecture
              = paX64</tt>, заменить их на вызов функции <tt>IsX64Compatible</tt>.</li>
        </ol>
        <div class="limargins">Ключевое различие между <tt>x64</tt>/<tt>IsX64</tt>
          и новым <tt>x64compatible</tt>/<tt>IsX64Compatible</tt> заключается в
          том, что последний соответствует как Windows 64-бит, так и Windows 11
          на платформе Arm64.</div>
        В большинстве случае <b>следует сделать указанные выше изменения</b>,
        иначе пользователи систем Arm64 не смогут запустить ваши программы
        установки. К примеру, настройка <tt>ArchitecturesAllowed=x64</tt>
        позволит запустить инсталлятор только на системе Windows 64-бит — но не
        на системе Arm64 Windows 11. Или, если программа установки содержит обе
        разрядности приложения, как 32-бит, так 64-бит, то при запуске на
        системе Arm64 Windows 11 автоматически может быть выбрана 32-бит версия
        приложения вместо ожидаемой 64-бит.</li>
      <li>Были улучшены директивы <tt>ArchitecturesAllowed</tt> и <tt>ArchitecturesInstallIn64BitMode</tt>
        в секции <tt>[Setup]</tt>:
        <ul>
          <li>Введены шесть новых идентификаторов архитектуры. Кратко:
            <ul>
              <li><tt>arm32compatible</tt> соответствует системам, способным
                запускать 32-бит двоичные файлы Arm.</li>
              <li><tt>x64compatible</tt> соответствует системам, способным
                запускать 64-бит исполняемые файлы.</li>
              <li><tt>x64os</tt> соответствует системам, работающим только по
                управлением Windows 64-бит (равнозначно существующему
                идентификатору <tt>x64</tt>, который теперь устарел).</li>
              <li><tt>x86compatible</tt> соответствует системам, способным
                запускать 32-бит исполняемые файлы.</li>
              <li><tt>x86os</tt> соответствует системам, работающим только по
                управлением Windows 32-бит (равнозначно существующему
                идентификатору <tt>x86</tt>).</li>
              <li><tt>win64</tt> соответствует системам, работающим по
                управлением Windows 64-бит, независимо от архитектуры.</li>
            </ul>
            Более подробно о каждом идентификаторе см. раздел справки "<a href="ishelp/index.php?topic=archidentifiers"><i>Идентификаторы
                архитектуры</i></a>".</li>
          <li>Теперь поддерживаются логические выражения. Например, с помощью
            оператора <tt>and</tt> можно затребовать одновременного совпадения
            двух идентификаторов архитектуры. Примеры использования см. в
            разделе справки "<a href="ishelp/index.php?topic=setup_architecturesallowed"><i>ArchitecturesAllowed</i></a>".</li>
        </ul>
      </li>
      <li>Идентификатор архитектуры <tt>x64</tt> теперь устарел. Если он
        используется, компилятор выдаст предупреждение и заменит его на <tt>x64os</tt>,
        который имеет тот же эффект. Но, как уже говорилось ранее, в большинстве
        случаев <b>следует использовать</b> <tt>x64compatible</tt>, поскольку
        он соответствует как Windows 64-бит, так и Arm64 Windows 11.</li>
      <li>Все 64-разрядные примеры сценариев <tt>64Bit*.iss</tt>, были
        обновлены для использования <tt>x64compatible</tt> в качестве
        предпочтительного варианта. </li>
      <li>Некоторые 64-разрядные функции, которые раньше работали только в
        Windows 64-бит, теперь работают и в Windows 11 на платформе Arm64. К ним
        относятся:
        <ul>
          <li>Параметр <tt>Permissions</tt> в секции <tt>[Dirs]</tt> при
            запуске в 64-разрядном режиме установки;</li>
          <li>Параметр <tt>Permissions</tt> в секции <tt>[Files]</tt> при
            запуске в 64-разрядном режиме установки или когда используется флаг
            <tt>64bit</tt>;</li>
          <li>Параметр <tt>Permissions</tt> в секции <tt>[Registry]</tt> при
            запуске в 64-разрядном режиме установки или когда значение параметра
            <tt>Root</tt> завершается на <tt>64</tt>;</li>
          <li>Флаг <tt>regtypelib</tt> в секции <tt>[Files]</tt> при запуске в
            64-разрядном режиме установки или когда используется флаг <tt>64bit</tt>.</li>
        </ul>
        Обратите внимание, что всё вышеперечисленное по-прежнему не
        поддерживается в Windows 10 на платформе Arm64.</li>
      <li>Теперь при установке ведётся журнал типов машин, поддерживаемых
        системой, т.е. какие типы ЕХЕ-файлов могут быть выполнены как напрямую,
        так и посредством эмуляции. Например, при запуске на системе Arm64
        Windows 11 в журнале появится запись: <tt>Machine types supported by
          system: x86 x64 Arm32 Arm64</tt>.</li>
      <li>Сообщение <tt>OnlyOnTheseArchitectures</tt> больше не используется.
        Вместо него теперь выводится сообщение <tt>WindowsVersionNotSupported</tt>,
        когда Setup запускается на архитектуре, которая не разрешена выражением
        <tt>ArchitecturesAllowed</tt>. (Но, пожалуйста, не удаляйте это
        сообщение из файлов перевода).</li>
      <li>Изменения Pascal Scripting: добавлены новые функции <tt>IsArm32Compatible</tt>,
        <tt>IsX64Compatible</tt>, <tt>IsX64OS</tt>, <tt>IsX86Compatible</tt> и
        <tt>IsX86OS</tt>. Функция <tt>IsX64</tt> все ещё существует, но уже
        устарела, как объяснялось выше. Ниже показан пример проверки всех
        идентификаторов архитектуры:
        <pre style="color:#000000; background-color:#f8f8f8;"><span style="color:#000000; font-weight:bold">[Code]</span>
<span style="color:#0000ff">function</span> <span style="color:#000050; font-weight:bold">InitializeSetup</span>: Boolean;
<span style="color:#0000ff">begin</span>
  <span style="color:#0000ff">if</span> IsArm32Compatible <span style="color:#0000ff">then</span> Log(<span

style="color:#800000">'IsArm32Compatible'</span>);
  <span style="color:#0000ff">if</span> IsArm64 <span style="color:#0000ff">then</span> Log(<span

style="color:#800000">'IsArm64'</span>);
  <span style="color:#0000ff">if</span> IsX64OS <span style="color:#0000ff">then</span> Log(<span

style="color:#800000">'IsX64OS'</span>);
  <span style="color:#0000ff">if</span> IsX64Compatible <span style="color:#0000ff">then</span> Log(<span

style="color:#800000">'IsX64Compatible'</span>);
  <span style="color:#0000ff">if</span> IsX86 <span style="color:#0000ff">then</span> Log(<span

style="color:#800000">'IsX86'</span>);
  <span style="color:#0000ff">if</span> IsX86OS <span style="color:#0000ff">then</span> Log(<span

style="color:#800000">'IsX86OS'</span>);
  <span style="color:#0000ff">if</span> IsX86Compatible <span style="color:#0000ff">then</span> Log(<span

style="color:#800000">'IsX86Compatible'</span>);
  <span style="color:#0000ff">if</span> IsWin64 <span style="color:#0000ff">then</span> Log(<span

style="color:#800000">'IsWin64'</span>);
  Result := True;
<span style="color:#0000ff">end</span>;
</pre> </li>
    </ul>
    <p><span class="head2">Улучшена поддержка файлов #include</span></p>
    <ul>
      <li>Теперь IDE компилятор может открыть во вкладках до 20 файлов #include
        вместо 10.</li>
      <li>Добавлена возможность закрытия вкладок с открытыми файлами #include: в
        меню "<i>View</i>" (Вид) добавлены новые пункты "<i>Close Tab</i>"
        (Ctrl+F4) (Закрыть вкладку), "<i>Reopen Tab</i>" (Переоткрыть вкладку)
        и "<i>Reopen All Tabs</i>" (Переоткрыть все вкладки), которые также
        доступны в контекстном меню при клике по панели вкладок.</li>
      <li>На выбранной вкладке (или при наведении мышки) с файлом #include
        теперь отображается кнопка закрытия.</li>
      <li>В строку состояния добавлена кликабельная панель, показывающая
        количество закрытых вкладок, если таковые имеются.</li>
      <li>Устранено мерцание (особенно заметное в темном режиме) при
        переключении вкладок.</li>
    </ul>
    <p><span class="head2">Удалена поддержка Windows Vista, Windows Server 2008
        и архитектуры Itanium</span></p>
    <ul>
      <li><b>Изменения в требованиях ОС:</b> Windows Vista и Windows Server 2008
        больше не поддерживаются. Windows 7 и Windows Server 2008 R2 теперь
        являются минимальными поддерживаемыми системами. Директива <tt>MinVersion</tt>
        в секции <tt>[Setup]</tt> по умолчанию все ешё имеет значение <tt>6.1sp1</tt>,
        поэтому по умолчанию программа установки все также не будет работать
        Windows 7 и Windows Server 2008 R2, которые не были обновлены.</li>
      <li>Устаревшая архитектура Itanium больше не поддерживается. Идентификатор
        архитектуры <tt>ia64</tt> был удалён и теперь при запуске на системе
        Itanium программа установки будет выдавать сообщение об ошибке
        <tt>WindowsVersionNotSupported</tt>.</li>
      <li>В секции <tt>[Icons]</tt> удалён флаг <tt>foldershortcut</tt>,
        который и так игнорировался, за исключением случаев работы на Windows
        Vista или Windows Server 2008, так как ярлыки папок в меню "Пуск" больше
        не раскрываются.</li>
    </ul>
    <p><span class="head2">Изменения в IDE компилятора:</span></p>
    <ul>
      <li>На панель инструментов добавлены кнопки и горячие клавиши для
        навигации назад (Alt+Left) и вперед (Alt+Right). Элемент навигации
        добавляется при смене вкладок или перемещении не менее 11 строк
        одновременно, аналогично Visual Studio 2022.<br>
        В связи с тем, что клавиши Alt+Right больше не могут использоваться для
        инициирования автозавершения, теперь вместо них следует использовать
        существующую комбинацию Ctrl+Space или альтернативную Ctrl+I. Чтобы
        по-прежнему использовать комбинацию Alt+Right, активируйте горячие
        клавиши в стиле Visual Studio, см. ниже.</li>
      <li>В меню "<i>Build</i>" (Сборка) и "<i>Run</i>" (Отладка) добавлена
        поддержка горячих клавиш в стиле Visual Studio (например, Ctrl+- для
        перехода назад, Ctrl+B для компиляции и F5 для запуска). Для активации этой
        функции воспользуйтесь пунктом "<i>Options</i>" (Настройки) меню "<i>Tools</i>"
        (Инструменты) и выберите в новом параметре <i>Key Map</i> (Клавиатурные
        команды) опцию <i>Visual Studio</i>.</li>
      <li>Добавлена поддержка тёмной темы в заголовок окна на Windows 10 версии
        2004 и выше.</li>
      <li>Добавлена поддержка тёмной темы в главное меню на всех версиях
        Windows.</li>
      <li>Добавлена поддержка тёмной темы в контекстное меню на Windows 10
        версии 1903 и более поздних версиях вплоть до Windows 11 версии 23H2,
        которая на данный момент является последней версией Windows 11. </li>
      <li>Обновлены значки редактора, используемые в поле справа от номера
        строки, включая автоматический выбор значков высокого качества при более
        высоких настройках DPI.</li>
      <li>Строки с установленными точками останова теперь отображаются в виде
        обычных строк вместо текста белого цвета на красном фоне.</li>
      <li>Точки останова теперь сохраняются между сессиями для каждого файла.</li>
      <li>В меню "<i>Run</i>" (Отладка) добавлен новый пункт "<i>Delete All
          Breakpoints</i>" (Shift+Ctrl+F5) (Удалить все точки останова).</li>
      <li>Добавлены значки для элементов меню.</li>
      <li>Добавлены новые параметры "<i>Highlight occurrences of current selection</i>"
        (Подсвечивать совпадения текущего выделения) и "<i>Highlight occurrences
          of current word</i>" (Подсвечивать совпадения текущего слова). По умолчанию
        первый параметр включен, а второй отключен.</li>
      <li>Параметр "<i>Allow cursor to move beyond end of lines</i>" (Перемещать
        каретку за пределы конца строк) теперь по умолчанию отключен, как и в
        большинстве других редакторов.</li>
      <li>Если параметр "<i>Allow cursor to move beyond end of lines</i>"
        (Перемещать каретку за пределы конца строк) включен, то нажатие клавиши
        со стрелкой влево, когда курсор находится в начале строки, больше не
        перемещает курсор в конец предыдущей строки, если не нажата клавиша
        Ctrl, как в Notepad++, Visual Studio и RAD Studio.</li>
      <li>Мастер создания нового сценария теперь предлагает возможность
        импортировать .reg-файл реестра Windows.</li>
      <li>Мастер создания нового скрипта теперь автоматически устанавливает
        значения директив <tt>ArchitecturesInstallIn64BitMode</tt> и <tt>ArchitecturesAllowed</tt>
        на <tt>x64compatible</tt>, если обнаруживает, что выбранный основной
        исполняемый файл является 64-разрядным. Основным исполняемым файлом по
        умолчанию теперь является 64-разрядный исполняемый файл примера
        MyProg-x64.exe, а не 32-разрядный файл MyProg.exe.</li>
      <li>В меню "<i>Tools</i>" (Инструменты) добавлен новый пункт "<i>Generate
          [Registry] Entries...</i>" (Ctrl+Shift+R) для импорта в секцию <tt>[Registry]</tt>
        данных из файла реестра Windows (.reg). Если секция <tt>[Registry]</tt>
        не существует, она будет создана.</li>
      <li>В меню "<i>Tools</i>" (Инструменты) добавлен новый пункт "<i>Generate
          [Files] Entries...</i>" (Ctrl+Shift+I) для вставки в секцию <tt>[Files]</tt>
        дополнительных записей о файлах и/или папках. Если секция <tt>[Files]</tt>
        не существует, она будет создана.</li>
      <li>Инструмент "<i>Generate MsgBox/TaskDialogMsgBox Call...</i>"
        (Ctrl+Shift+M) (ранее известный как <i>MsgBox/TaskDialogMsgBox Designer</i>)
        теперь учитывает настройки ширины и символов табуляции редактора, делает
        соответствующие отступы в генерируемом Pascal-сценарии и предупреждает,
        если позиция курсора находится не в секции <tt>[Code]</tt>.</li>
      <li>Небольшая коррекция цвета темы, например, другой цвет фона для
        выделенного текста.</li>
    </ul>
    <p><span class="head2">Улучшена поддержка ведения журнала</span></p>
    <ul>
      <li>Добавлен новый флаг <tt>logoutput</tt> для секций <tt>[Run]</tt> и <tt>[UninstallRun]</tt>.
        Он указывает программе установки/удаления вести протокол запускаемой
        программы или пакетного файла. Это флаг нельзя комбинировать с флагами <tt>nowait</tt>,
        <tt>runasoriginaluser</tt>, <tt>shellexec</tt> и <tt>waituntilidle</tt>.
        Он не имеет никакого действия, если ведение журнала не включено.</li>
      <li>В секции <tt>[Setup]</tt> добавлена новая директива <tt>UninstallLogging</tt>
        со значением по умолчанию <tt>no</tt>. При значении <tt>yes</tt>,
        программа удаления всегда будет создавать файл отчёта, если её запуск
        был выполнен из панели управления "<i>Добавление/Удаление программ</i>".
        Эквивалентна передаваемому в командной строке параметру /LOG.</li>
      <li>Изменения цифровой подписи: инструмент цифровой подписи теперь всегда
        регистрирует свои события в IDE компилятора на панели "Сообщения
        компилятора", что облегчает отладку проблем. В связи с этим инструменты,
        являющиеся консольными программами, теперь всегда будут запускаться
        скрыто, так как их вывод перехватывается, и они ничего не будут
        отображать в своем окне.</li>
      <li>Изменения Pascal Scripting: добавлена новая функция <tt>ExecAndLogOutput</tt>.
        Может быть использована для записи протокола запускаемой программы или
        пакетного файла в журнал программы установки/удаления или для получения
        построчного результата в собственной функции из секции <tt>[Code]</tt>,
        как показано в справочной документации.</li>
      <li>Изменения ISPP:
        <ul>
          <li>Протокол о запуске программ или пакетных файлов, выполненных при
            помощи функции <tt>Exec</tt>, теперь по умолчанию всегда
            регистрируется в IDE компилятора на панели "Сообщения компилятора".
            Его можно отключить при помощи нового аргумента функции.</li>
          <li>Добавлена новая функция <tt>ExecAndGetFirstLine</tt> для запуска
            программы или пакетного файла и чтения первой непустой строки из
            протокола запуска, которая может быть использована в сценарии, как
            показано в примере сценария <i>PowerShell.iss</i>.</li>
        </ul>
      </li>
    </ul>
    <p><span class="head2">Другие изменения</span></p>
    <ul>
      <li>Изменения в консольном компиляторе (ISCC): добавлена поддержка вывода
        в кодировке Unicode.</li>
      <li>В секции <tt>[Files]</tt> добавлен новый флаг <tt>signcheck</tt>.
        Указывает компилятору проверять наличие цифровой подписи в исходных
        файлах перед их добавлением в пакет установки.</li>
      <li>Ранее программа установки в процессе своей работы всегда запрашивала
        Windows создавать все недостающие папки <tt>{usercf}</tt>, <tt>{userpf}</tt>
        и <tt>{usersavedgames}</tt>. Теперь же она не будет этого делать до тех
        пор, пока из сценария не поступит запрос для папки. Обратите внимание,
        что сценарии, запущенные в административном режиме установки, не должны
        этого делать, поскольку это нарушает соглашение об <a href="ishelp/index.php?topic=setup_useduserareaswarning">используемых
          пользовательских областях</a>.</li>
      <li>Предприняты дополнительные меры для предотвращения атак с предварительной
        загрузкой DLL.</li>
      <li>Добавлена поддержка идентификаторов группы пользователей IIS (<tt>iisiusrs</tt>)
        для использования в параметре <tt>Permissions</tt>.</li>
      <li>Изменения ISPP:
        <ul>
          <li>Добавлена новая функция <tt>AddQuotes</tt> для заключения строки
            в кавычки, если она содержит пробелы или ещё не была заключена в
            кавычки.</li>
          <li>Функция <tt>Exec</tt> больше не требует, чтобы параметр имени
            файла был заключен в кавычки, если строка содержит пробелы. Кроме
            того, теперь функция может принимать "&gt;" в качестве имени файла и
            включает специальную поддержку .bat и .cmd файлов.</li>
        </ul>
      </li>
      <li>Изменения в Pascal Scripting:
        <ul>
          <li>Добавлены вспомогательные функции <tt>UTF8Encode</tt> и <tt>UTF8Decode</tt>
            для кодирования строк Unicode в строки ANSI с кодировкой UTF-8 и
            наоборот.</li>
          <li>Добавлены функции <tt>LoadStringFromLockedFile</tt> и <tt>LoadStringsFromLockedFile</tt>
            для чтения строк из файла, который занят другим приложением, например,
            открыт для записи в другой программе.</li>
          <li>Добавлен класс <tt>TNewLinkLabel</tt>, который может отображать
            многострочный текст со встроенными ссылками и внутренне использует
            элемент управления Windows SysLink. Пример использования см. в
            сценарии <i>CodeClasses.iss</i>.</li>
          <li><tt>TWizardForm</tt>: добавлена новая функция <tt>AdjustLinkLabelHeight</tt>.</li>
          <li><tt>TDownloadPage</tt>: добавлено новое свойство <tt>ShowBaseNameInsteadOfUrl</tt>.</li>
          <li>Теперь возможна запись вида <tt>var S: set of AnsiChar; begin S
              := ['a', 'b']; end;</tt>. В предыдущих версиях это приводило к
            ошибке несоответствия типов.</li>
          <li>Теперь возможна запись вида <tt>Stream.ReadBuffer(S, Length(S));</tt>,
            когда <tt>S</tt> имеет тип <tt>AnsiString</tt>. В предыдущих
            версиях эта команда компилировалась, но не работала во время
            выполнения программы установки. То же самое относится к функциям <tt>Read</tt>,
            <tt>Write</tt> и <tt>WriteBuffer</tt>. Теперь эти четыре функции
            принимают строки любого типа.</li>
          <li>В сценарий <i>CodeAutomation.iss</i> добавлен пример загрузки и
            распаковки архива Zip.</li>
          <li>тип <tt>TShellFolderID</tt> был удален, поскольку не
            использовался ни одной вспомогательной функцией.</li>
        </ul>
      </li>
      <li>Исправлено отображение значков в диалоге <i>Выбор языка</i> и
        страницах мастера <i>Выбор папки установки</i>, <i>Выбор папки в меню
          "Пуск"</i> и <i>Подготовка к установке</i> при масштабе 150% DPI и
        200% DPI.</li>
      <li>Добавлены новые значки для примеров исполняемых файлов "MyProg" и их
        сборка выполнена в Visual Studio 2022.</li>
      <li>Добавлен официальный перевод на Корейский язык.</li>
      <li>Сборка Inno Setup теперь выполняется в Delphi 11.3 Alexandria вместо
        Delphi 10.3 Rio.</li>
      <li>Delphi-проекты Inno Setup были вновь созданы как новые чистые проекты
        и добавлены в группу проектов <i>Projects\Projects.groupproj</i>. Это
        значительно облегчает начало работы с исходным кодом Inno Setup и
        внесение вклада, даже при использовании бесплатной версии Delphi
        Community Edition.</li>
      <li>Обновление документации и исправление неточностей.</li>
    </ul>
    <p>Разработка в <a href="https://github.com/jrsoftware/issrc" target="_blank">GitHub</a>:
      благодарим Achim Stuy, ser163, Jens Geyer и Sergii Leonov за оказанное
      содействие в развитии Inno Setup.</p>
    <p><a href="https://leserg73.github.io/InnoHelp/ishistory/whatsnew62.htm">История
        версий Inno Setup 6.2</a></p>
  </body>
</html>
