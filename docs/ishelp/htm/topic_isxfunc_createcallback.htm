<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="ru">
  <head>
    <meta http-equiv="Content-Language" content="ru" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=8" />
    <meta content="Перевод на русский: Сергей Леонов (aka Leserg)" name="description" />
    <title>Pascal Scripting: CreateCallback</title>
    <!--[if IE 6]><style type="text/css">html{overflow-y:scroll}</style><![endif]-->
    <link rel="stylesheet" type="text/css" href="../css/styles.css" />
    <script type="text/javascript" src="../js/topic.js"></script>
    <script type="text/javascript" src="../js/jquery.js"></script>
    <script type="text/javascript" src="../js/highlight.js"></script>
    <script type="text/javascript">
      $(document).ready(function(){highlight();});
    </script>
  </head>
  <body>
    <h1 class="topicheading">Pascal Scripting: CreateCallback</h1>
    <div class="topicbody">
      <br />
      <div class="prototip"><b>Прототип:</b></div>
      <p class="prototip1"><tt>function CreateCallback(Method: AnyMethod): Longword;</tt></p>
      <div><b>Описание:</b></div>
      <br />
      <div class="absaz">Позволяет выполнять обратные вызовы из функций DLL
        (подобно функциям Windows API) напрямую в функции сценария.</div>
      <br />
      <div><b>Пример:</b></div>
      <pre class="indent examplebox"><span class="hl kwb">function</span> SetTimer(hWnd, nIDEvent, uElapse, lpTimerFunc: Longword): Longword;
<span class="hl kwb">external</span> <span class="hl str">'SetTimer@user32.dll stdcall'</span>;

<span class="hl kwb">var</span>
  TimerCount: Integer;

<span class="hl kwb">procedure</span> MyTimerProc(Arg1, Arg2, Arg3, Arg4: Longword);
<span class="hl kwb">begin</span>
  Inc(TimerCount);
  WizardForm.BeveledLabel.Caption := <span class="hl str">' Timer! '</span> + IntToStr(TimerCount);
  WizardForm.BeveledLabel.Visible := True;
<span class="hl kwb">end</span>;

<span class="hl kwb">procedure</span> <span class="hl kwd">InitializeWizard</span>;
<span class="hl kwb">begin</span>
  SetTimer(<span class="hl num">0</span>, <span class="hl num">0</span>, <span class="hl num">1000</span>, CreateCallback(@MyTimerProc));
<span class="hl kwb">end</span>;</pre>
    </div>
  </body>
</html>
